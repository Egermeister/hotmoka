package io.hotmoka.network.models.responses;

import java.util.List;
import java.util.stream.Collectors;

import io.hotmoka.beans.annotations.Immutable;
import io.hotmoka.beans.responses.MethodCallTransactionSuccessfulResponse;
import io.hotmoka.network.models.updates.UpdateModel;
import io.hotmoka.network.models.values.StorageReferenceModel;
import io.hotmoka.network.models.values.StorageValueModel;

@Immutable
public class MethodCallTransactionSuccessfulResponseModel extends MethodCallTransactionResponseModel {

    /**
     * The return value of the method.
     */
    public final StorageValueModel result;

    /**
     * The events generated by this transaction.
     */
    private final List<StorageReferenceModel> events;

    public MethodCallTransactionSuccessfulResponseModel(MethodCallTransactionSuccessfulResponse response) {
        super(response);

        this.result = new StorageValueModel(response.result);
        this.events = response.getEvents().map(StorageReferenceModel::new).collect(Collectors.toList());
    }

    public MethodCallTransactionSuccessfulResponse toBean() {
        return new MethodCallTransactionSuccessfulResponse(
        	result.toBean(),
        	updates.stream().map(UpdateModel::toBean),
        	events.stream().map(StorageReferenceModel::toBean),
        	gasConsumedForCPU,
        	gasConsumedForRAM,
        	gasConsumedForStorage
        );
    }
}