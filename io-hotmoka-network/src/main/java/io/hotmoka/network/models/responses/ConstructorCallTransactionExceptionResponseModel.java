package io.hotmoka.network.models.responses;

import io.hotmoka.beans.annotations.Immutable;
import io.hotmoka.beans.responses.ConstructorCallTransactionExceptionResponse;
import io.hotmoka.network.models.updates.UpdateModel;
import io.hotmoka.network.models.values.StorageReferenceModel;

import java.math.BigInteger;
import java.util.List;
import java.util.stream.Collectors;

@Immutable
public class ConstructorCallTransactionExceptionResponseModel extends ConstructorCallTransactionResponseModel {

	/**
     * The events generated by this transaction.
     */
    public final List<StorageReferenceModel> events;

    /**
     * The fully-qualified class name of the cause exception.
     */
    public final String classNameOfCause;

    /**
     * The message of the cause exception.
     */
    public final String messageOfCause;

    /**
     * The program point where the cause exception occurred.
     */
    public final String where;


    public ConstructorCallTransactionExceptionResponseModel(ConstructorCallTransactionExceptionResponse response) {
        super(response);

        this.events = response.getEvents().map(StorageReferenceModel::new).collect(Collectors.toList());
        this.classNameOfCause = response.classNameOfCause;
        this.messageOfCause = response.messageOfCause;
        this.where = response.where;
    }

    public ConstructorCallTransactionExceptionResponse toBean() {
        return new ConstructorCallTransactionExceptionResponse(
        	classNameOfCause,
            messageOfCause,
            where,
            updates.stream().map(UpdateModel::toBean),
            events.stream().map(StorageReferenceModel::toBean),
            new BigInteger(gasConsumedForCPU),
            new BigInteger(gasConsumedForRAM),
            new BigInteger(gasConsumedForStorage)
        );
    }
}
